#!/bin/sh
#
# Deploy the environment.
#
# @author   TADOKORO Saneyuki <saneyan@mail.gfunction.com>
# @license  MIT License

#[ "$(whoami)" != "root" ] && echo "Root privilege required." && exit 1

declare _in= _dir=
declare _arch=$(uname -m)
declare -r _mntp=/mnt/archiso   # The mount point of Arch ISO (Read-only)
declare -r _dirname=$(cd $(dirname $0)/../ && pwd)

[ -e $_dirname/.deploy.lock ] && echo "It has already been deployed." && exit 1

source $_dirname/subsets/remaster-utils

while getopts i:d:a: opt; do
  case $opt in
    # Arch ISO path.
    i) _in=$OPTARG ;;
    # Destination directory.
    d) _dir=$OPTARG ;;
    # The target architecture. It must be x86_64 or i686 architecture.
    a)
      if [[ "$OPTARG" =~ "^(x86_64|i686)$" ]]; then
        _arch=$OPTARG
      else
        echo "Specify an architecture, 'x86_64' or 'i686'"
        return 1
      fi
      ;;
  esac
done

[[ -z $_in ]] && echo "Arch ISO path is required." && exit 1
[[ -z $_dir ]] && echo "The destination directory is required." && exit 1

readonly _in _dir _arch

echo "Start deploying..."

__ ":: Extract and unsquashing filesystem..."
[ ! -e $_mntp ] && sudo mkdir --verbose $_mntp
sudo mount --verbose --types iso9660 --options loop $_in $_mntp

if [ -e $_dir ]; then
  echo "$_dir is already existed."
else
  mkdir $_dir
  cp --archive --verbose $_mntp $_dir/archive
fi

cd $_dir/archive/arch/$_arch
unsquashfs -dest $_dir/squashfs-root airootfs.sfs

mkdir --verbose $_dir/mnt
sudo mount --verbose --options loop $_dir/squashfs-root/airootfs.img $_dir/mnt

__ "The contents are existed in '$_dir/mnt'"

touch $_dirname/.deploy.lock

[ $? = 0 ] && echo "Done!"
